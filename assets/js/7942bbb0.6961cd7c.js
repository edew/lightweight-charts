"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4015],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=i,u=m["".concat(s,".").concat(d)]||m[d]||h[d]||r;return a?n.createElement(u,l(l({ref:t},p),{},{components:a})):n.createElement(u,l({ref:t},p))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7930:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),l=["components"],o={sidebar_position:1},s="Series types",c={unversionedId:"series-types",id:"series-types",title:"Series types",description:"In this article you can read a brief overview of all supported series types.",source:"@site/docs/series-types.md",sourceDirName:".",slug:"/series-types",permalink:"/lightweight-charts/docs/next/series-types",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Getting started",permalink:"/lightweight-charts/docs/next/"},next:{title:"Price scale",permalink:"/lightweight-charts/docs/next/price-scale"}},p=[{value:"A series customizations",id:"a-series-customizations",children:[],level:2},{value:"Area",id:"area",children:[],level:2},{value:"Bar",id:"bar",children:[],level:2},{value:"Baseline",id:"baseline",children:[],level:2},{value:"Candlestick",id:"candlestick",children:[],level:2},{value:"Histogram",id:"histogram",children:[],level:2},{value:"Line",id:"line",children:[],level:2}],h={toc:p};function m(e){var t=e.components,a=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"series-types"},"Series types"),(0,r.kt)("p",null,"In this article you can read a brief overview of all supported series types."),(0,r.kt)("h2",{id:"a-series-customizations"},"A series customizations"),(0,r.kt)("p",null,"Any type of series can be customized and the set of available options that you can apply depends on a type of a series (see docs for each series type below)."),(0,r.kt)("p",null,"If you'd like to change any option of a series, you could do this in different ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can specify the default options while creating a series:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// change default top & bottom colors of an area series in creating time\nconst series = chart.addAreaSeries({\n    topColor: 'red',\n    bottomColor: 'green',\n});\n")),(0,r.kt)("p",{parentName:"li"},"Note that every method to create a series has an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," parameter.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can use ",(0,r.kt)("a",{parentName:"p",href:"/lightweight-charts/docs/next/api/interfaces/ISeriesApi#applyoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"ISeriesApi.applyOptions"))," method to apply other options on the fly:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// updating candlestick series options on the fly\ncandlestickSeries.applyOptions({\n    upColor: 'red',\n    downColor: 'blue',\n});\n")))),(0,r.kt)("h2",{id:"area"},"Area"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addareaseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addAreaSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SingleValueData"},(0,r.kt)("inlineCode",{parentName:"a"},"SingleValueData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/AreaStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"AreaStyleOptions")))),(0,r.kt)("p",null,"An area chart is basically a colored area between the line connecting all data points and ",(0,r.kt)("a",{parentName:"p",href:"/lightweight-charts/docs/next/time-scale"},"the time scale"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(document.getElementById('container'));\nconst areaSeries = chart.addAreaSeries();\n\nconst data = [{ value: 0, time: 1642425322 }, { value: 8, time: 1642511722 }, { value: 10, time: 1642598122 }, { value: 20, time: 1642684522 }, { value: 3, time: 1642770922 }, { value: 43, time: 1642857322 }, { value: 41, time: 1642943722 }, { value: 43, time: 1643030122 }, { value: 56, time: 1643116522 }, { value: 46, time: 1643202922 }];\n\nareaSeries.setData(data);\n\nchart.timeScale().fitContent();\n")),(0,r.kt)("h2",{id:"bar"},"Bar"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addbarseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addBarSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/BarData"},(0,r.kt)("inlineCode",{parentName:"a"},"BarData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/BarStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"BarStyleOptions")))),(0,r.kt)("p",null,"A bar chart shows price movements in the form of bars."),(0,r.kt)("p",null,"Vertical line length of a bar is limited by the highest and lowest price values.\nOpen & Close values are represented by tick marks, on the left & right hand side of the bar respectively:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(document.getElementById('container'));\nconst barSeries = chart.addBarSeries();\n\nconst data = [{ open: 10, high: 10.63, low: 9.49, close: 9.55, time: 1642427876 }, { open: 9.55, high: 10.30, low: 9.42, close: 9.94, time: 1642514276 }, { open: 9.94, high: 10.17, low: 9.92, close: 9.78, time: 1642600676 }, { open: 9.78, high: 10.59, low: 9.18, close: 9.51, time: 1642687076 }, { open: 9.51, high: 10.46, low: 9.10, close: 10.17, time: 1642773476 }, { open: 10.17, high: 10.96, low: 10.16, close: 10.47, time: 1642859876 }, { open: 10.47, high: 11.39, low: 10.40, close: 10.81, time: 1642946276 }, { open: 10.81, high: 11.60, low: 10.30, close: 10.75, time: 1643032676 }, { open: 10.75, high: 11.60, low: 10.49, close: 10.93, time: 1643119076 }, { open: 10.93, high: 11.53, low: 10.76, close: 10.96, time: 1643205476 }];\n\nbarSeries.setData(data);\n\nchart.timeScale().fitContent();\n")),(0,r.kt)("h2",{id:"baseline"},"Baseline"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addbaselineseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addBaselineSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SingleValueData"},(0,r.kt)("inlineCode",{parentName:"a"},"SingleValueData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/BaselineStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"BaselineStyleOptions")))),(0,r.kt)("p",null,"A baseline is basically two colored areas (top and bottom) between the line connecting all data points and ",(0,r.kt)("a",{parentName:"p",href:"/lightweight-charts/docs/next/api/interfaces/BaselineStyleOptions#basevalue"},"the base value line"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(document.getElementById('container'));\nconst baselineSeries = chart.addBaselineSeries({ baseValue: { type: 'price', price: 25 } });\n\nconst data = [{ value: 1, time: 1642425322 }, { value: 8, time: 1642511722 }, { value: 10, time: 1642598122 }, { value: 20, time: 1642684522 }, { value: 3, time: 1642770922 }, { value: 43, time: 1642857322 }, { value: 41, time: 1642943722 }, { value: 43, time: 1643030122 }, { value: 56, time: 1643116522 }, { value: 46, time: 1643202922 }];\n\nbaselineSeries.setData(data);\n\nchart.timeScale().fitContent();\n")),(0,r.kt)("h2",{id:"candlestick"},"Candlestick"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addcandlestickseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addCandlestickSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/CandlestickData"},(0,r.kt)("inlineCode",{parentName:"a"},"CandlestickData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/CandlestickStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"CandlestickStyleOptions")))),(0,r.kt)("p",null,"A candlestick chart shows price movements in the form of candlesticks.\nOn the candlestick chart, open & close values form a solid body of a candle while wicks show high & low values for a candlestick's time interval:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(document.getElementById('container'));\nconst candlestickSeries = chart.addCandlestickSeries();\n\nconst data = [{ open: 10, high: 10.63, low: 9.49, close: 9.55, time: 1642427876 }, { open: 9.55, high: 10.30, low: 9.42, close: 9.94, time: 1642514276 }, { open: 9.94, high: 10.17, low: 9.92, close: 9.78, time: 1642600676 }, { open: 9.78, high: 10.59, low: 9.18, close: 9.51, time: 1642687076 }, { open: 9.51, high: 10.46, low: 9.10, close: 10.17, time: 1642773476 }, { open: 10.17, high: 10.96, low: 10.16, close: 10.47, time: 1642859876 }, { open: 10.47, high: 11.39, low: 10.40, close: 10.81, time: 1642946276 }, { open: 10.81, high: 11.60, low: 10.30, close: 10.75, time: 1643032676 }, { open: 10.75, high: 11.60, low: 10.49, close: 10.93, time: 1643119076 }, { open: 10.93, high: 11.53, low: 10.76, close: 10.96, time: 1643205476 }];\n\ncandlestickSeries.setData(data);\n\nchart.timeScale().fitContent();\n")),(0,r.kt)("h2",{id:"histogram"},"Histogram"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addhistogramseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addHistogramSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/HistogramData"},(0,r.kt)("inlineCode",{parentName:"a"},"HistogramData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/HistogramStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"HistogramStyleOptions")))),(0,r.kt)("p",null,"A histogram series is a graphical representation of the value distribution.\nHistogram creates intervals (columns) and counts how many values fall into each column:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(\n    document.getElementById('container')\n);\nconst histogramSeries = chart.addHistogramSeries();\n\nconst data = [{ value: 1, time: 1642425322 }, { value: 8, time: 1642511722 }, { value: 10, time: 1642598122 }, { value: 20, time: 1642684522 }, { value: 3, time: 1642770922, color: 'red' }, { value: 43, time: 1642857322 }, { value: 41, time: 1642943722, color: 'red' }, { value: 43, time: 1643030122 }, { value: 56, time: 1643116522 }, { value: 46, time: 1643202922, color: 'red' }];\n\nhistogramSeries.setData(data);\n\nchart.timeScale().fitContent();\n")),(0,r.kt)("h2",{id:"line"},"Line"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method to create"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/IChartApi#addlineseries"},(0,r.kt)("inlineCode",{parentName:"a"},"IChartApi.addLineSeries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data format"),": ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/LineData"},(0,r.kt)("inlineCode",{parentName:"a"},"LineData"))," or ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/WhitespaceData"},(0,r.kt)("inlineCode",{parentName:"a"},"WhitespaceData"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Style options"),": a mix of ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/SeriesOptionsCommon"},(0,r.kt)("inlineCode",{parentName:"a"},"SeriesOptionsCommon"))," and ",(0,r.kt)("a",{parentName:"li",href:"/lightweight-charts/docs/next/api/interfaces/LineStyleOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"LineStyleOptions")))),(0,r.kt)("p",null,"A line chart is a type of chart that displays information as series of the data points connected by straight line segments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"chart",chart:!0},"const chart = createChart(document.getElementById('container'));\nconst lineSeries = chart.addLineSeries({ color: '#26a69a' });\n\nconst data = [{ value: 0, time: 1642425322 }, { value: 8, time: 1642511722 }, { value: 10, time: 1642598122 }, { value: 20, time: 1642684522 }, { value: 3, time: 1642770922 }, { value: 43, time: 1642857322 }, { value: 41, time: 1642943722 }, { value: 43, time: 1643030122 }, { value: 56, time: 1643116522 }, { value: 46, time: 1643202922 }];\n\nlineSeries.setData(data);\n\nchart.timeScale().fitContent();\n")))}m.isMDXComponent=!0}}]);